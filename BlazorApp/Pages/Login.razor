@page "/Login"
@using HttpClients.Interfaces
@using BlazorApp.Pages.Services
@using BlazorApp.Service
@inject IUserService userService
@inject NavigationManager NavigationManager
@inject NavService NavService
@inject AuthenticationStateProvider authState

<MudContainer>
    <MudPaper Class="login-container">
        <MudText  >
            Login
        </MudText>

        <MudTextField @bind-Value="userName" Label="User name" Required="true" />

        <MudTextField  @bind-Value="password" Label="Password" Type="InputType.Password" Required="true" />

        @if (!string.IsNullOrEmpty(msg))
        {
            <MudAlert Class="mt-4">
                @msg
            </MudAlert>
        }

        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" @onclick="LoginAsync">
            Log in
        </MudButton>
    </MudPaper>
</MudContainer>

@code {
    private string userName;
    private string password;
    private string msg;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private async Task LoginAsync()
    {
        msg = "";
        try
        {
            await userService.LoginAsync(userName, password);
            NavigationManager.NavigateTo("/");
            NavService.LoggedInUserId = authState.GetAuthenticationStateAsync().Id;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = $"Error: {e.Message}";
        }
    }
}
