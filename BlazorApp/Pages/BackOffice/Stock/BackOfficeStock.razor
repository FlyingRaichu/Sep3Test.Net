@page "/BackOfficeStock"
@using HttpClients.Interfaces
@using Domain.DTOs.Item
@attribute [Authorize("MustBeAdmin")]
@inject IJSRuntime JsRuntime
@inject IItemService ItemService
<BackOfficeNavMenu/>
<h3>Resupply Stock</h3>
<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Title</th>
        <th>Description</th>
        <th>Price</th>
        <th>Manufacturer</th>
        <th>Stock</th>
    </tr>
    </thead>
    <tbody>
    @if (items == null)
    {
    }
    else if (!items.Any())
    {
        <p>No items to display. All items are currently in-stock.</p>
    }
    else
    {
@foreach (var item in items)
{
    <tr>
        <td>@item.Id</td>
        <td>@item.Title</td>
        <td>@item.Description</td>
        <td>@item.Price</td>
        <td>@item.Manufacturer</td>
        <td>@item.Stock</td>
        <td>
            <button style="margin-left: 5px" @onclick="@(() => ShowSupplyConfirmation(@item))" data-toggle="modal" data-target="#stockConfirmationModal">
                <i style="padding: 0 12px" class="oi oi-pencil"></i>
            </button>
        </td>
    </tr>
}
    }
    </tbody>
</table>

<div class="modal" id="stockConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Resupply</h5>
                <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>How much of this item would you like to restock?</p>
                <input type="text" placeholder="Amount" @bind="amtToResupply"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" @onclick="OrderStock" class="btn btn-danger">Order</button>
            </div>
        </div>
    </div>
</div>
<label style="color: red">@msg</label>
@code {
    private ICollection<Item>? items;
    private int amtToResupply;
    private Item itemToResupply;
    private string msg = "";
    
    protected override async Task OnInitializedAsync()
    {
        await LoadLowStock();
    }

    private async Task LoadLowStock()
    {
        try
        {
            //gets items by stock = 0
            items = await ItemService.GetItemsAsync(null, null, null, null, 0, null);
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private void ShowSupplyConfirmation(Item item)
    {
        itemToResupply = item;
    }

    private async Task OrderStock()
    {
        try
        {
            var dto = new ItemUpdateDto(itemToResupply.Id)
            {
                Title = null,
                Description = null,
                Price = null,
                Manufacturer = null,
                Stock = amtToResupply,
                Tags = null
            };

            await ItemService.UpdateAsync(dto);
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
        finally
        {
            await ExecuteJavascript("$('#stockConfirmationModal').modal('hide')");
        }
    }
    
    private async Task ExecuteJavascript(string script)
    {
        await JsRuntime.InvokeVoidAsync("eval", script);
    }
}