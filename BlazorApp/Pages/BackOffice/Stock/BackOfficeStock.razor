@page "/BackOfficeStock"
@using HttpClients.Interfaces
@attribute [Authorize("MustBeAdmin")]
@inject IItemService ItemService
<BackOfficeNavMenu/>
<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Title</th>
        <th>Description</th>
        <th>Price</th>
        <th>Manufacturer</th>
        <th>Stock</th>
    </tr>
    </thead>
    <tbody>
    @if (items == null)
    {
    }
    else if (!items.Any())
    {
        <p>No items to display.</p>
    }
    else
    {
@foreach (var item in items)
{
    <tr>
        <td>@item.Id</td>
        <td>@item.Title</td>
        <td>@item.Description</td>
        <td>@item.Price</td>
        <td>@item.Manufacturer</td>
        <td>@item.Stock</td>
        <td>
            <button style="margin-left: 50px" @onclick="@(OrderStock)">
                <i style="padding: 0 12px" class="oi oi-pencil"></i>
            </button>
        </td>
    </tr>
}
    }
    </tbody>
</table>

@code {
    private ICollection<Item>? items;
    private string msg = "";
    
    protected override async Task OnInitializedAsync()
    {
        await LoadLowStock();
    }

    private async Task LoadLowStock()
    {
        try
        {
            //gets items by stock = 0
            items = await ItemService.GetItemsAsync(null, null, null, null, 0, null);
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task OrderStock()
    {
        
    }
}